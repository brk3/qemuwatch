// TODO(SamYaple): Build structs for responses from QMP (this can be autogenerated based on the master branch of QEMU and json2rust)

use std::fmt;

// TODO(SamYaple): Write specialized deserializer to prevent the need of having more than one struct per QMP response
#[derive(Deserialize, Debug)]
pub struct QemuInfo {
    #[serde(rename="QMP")]
    pub qmp: Info,
}

#[derive(Deserialize, Debug)]
pub struct Info {
    pub version: Version,
    pub capabilities: Vec<String>,
}

#[derive(Deserialize, Debug)]
pub struct Version {
    pub qemu: Qemu,
    pub package: String,
}

#[derive(Deserialize, Debug)]
pub struct Qemu {
    pub major: u8,
    pub micro: u8,
    pub minor: u8,
}

impl fmt::Display for Qemu {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        write!(f, "{}.{}.{}", self.major, self.minor, self.micro)
    }
}

#[derive(Serialize)]
pub struct Execute {
    #[serde(rename="execute")]
    pub command: String,
}
